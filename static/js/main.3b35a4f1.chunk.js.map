{"version":3,"sources":["components/Navbar.js","components/Header.js","components/Home.js","App.js","serviceWorker.js","index.js","avatar.png"],"names":["useStyles","makeStyles","theme","menuSliderContainer","width","background","height","avatar","display","margin","spacing","listitem","color","menuItems","listIcon","Home","listText","AssignmentInd","AssessmentRounded","ContactMail","Navbar","slider","useState","right","state","setState","toggleSlider","open","classes","Box","component","AppBar","position","style","Toolbar","IconButton","onClick","ArrowBack","Typography","variant","anchor","className","Avatar","src","alt","Divider","List","map","lsItem","key","ListItem","button","ListItemIcon","ListItemText","primary","title","subtitle","marginBottom","typedContainer","top","left","transform","textAlign","zIndex","Header","Grid","container","justify","strings","typeSpeed","backSpeed","loop","particleCanva","postion","canvasClassName","params","particles","number","value","density","enable","value_area","shape","type","strole","size","random","anim","speed","size_min","sync","opacity","opacity_min","App","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.3b35a4f1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport MobilRightMenuSlider from \"@material-ui/core/Drawer\"\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    IconButton,\r\n    Avatar,\r\n    Divider,\r\n    List,\r\n    Typography,\r\n    Box,\r\n    Slider\r\n} from \"@material-ui/core\"\r\nimport {\r\n    ArrowBack,\r\n    AssignmentInd,\r\n    Home,\r\n    Apple,\r\n    ContactMail,\r\n    AssessmentRounded\r\n} from \"@material-ui/icons\"\r\nimport avatar from \"../avatar.png\"\r\nconst useStyles=makeStyles(theme=>({\r\n    menuSliderContainer:{\r\n        width:250,\r\n        background: \"#511\",\r\n        height: \"100%\"\r\n    },\r\n    avatar:{\r\n        display:\"block\",\r\n        margin:\"0.5rem auto\",\r\n        width:theme.spacing(13),\r\n        height:theme.spacing(13)\r\n    },\r\n    listitem:{\r\n        color:\"tan\"\r\n    }\r\n}))\r\nconst menuItems=[\r\n    {\r\n        listIcon: <Home/>,\r\n        listText:\"Home\"\r\n    },\r\n    {\r\n        listIcon: <AssignmentInd/>,\r\n        listText:\"Resume\"\r\n    },\r\n    {\r\n        listIcon: <AssessmentRounded/>,\r\n        listText:\"Portfolio\"\r\n    },\r\n    {\r\n        listIcon: <ContactMail/>,\r\n        listText:\"Contacts\"\r\n    },\r\n]\r\nconst Navbar=()=> {\r\n    const [state,setState]=useState({\r\n        right:false\r\n    });\r\n    const toggleSlider=(slider,open)=>()=>{\r\n        setState({...state,[slider]:open});\r\n    }\r\n    const classes=useStyles()\r\n    const sideList= slider=>(\r\n        <Box className={classes.menuSliderContainer} component=\"div\"\r\n        onClick={toggleSlider(slider,false)}\r\n        >\r\n        <Avatar className={classes.avatar} src={avatar} alt=\"ujwal\"/>\r\n        <Divider/>\r\n        <List>\r\n        {menuItems.map((lsItem,key)=>(\r\n         <ListItem button key={key}>\r\n                <ListItemIcon className={classes.listitem}>\r\n                 {lsItem.listIcon}\r\n                </ListItemIcon>\r\n                <ListItemText primary={lsItem.listText} className={classes.listitem}/>\r\n            </ListItem>\r\n        ))}\r\n           \r\n        </List>\r\n    </Box>\r\n    )\r\n  return (\r\n   <>\r\n   \r\n    <Box component=\"nav\">\r\n    <AppBar position=\"static\" style={{background:\"#222\"}}>\r\n        <Toolbar>\r\n        <IconButton onClick={toggleSlider(\"right\",true)}>\r\n            <ArrowBack style={{color:\"tomato\"}}/>\r\n            </IconButton>\r\n            <Typography variant=\"h5\" style={{color:\"tan\"}}>\r\n            Portfolio\r\n            </Typography>\r\n            <MobilRightMenuSlider\r\n            anchor=\"right\"\r\n            open={state.right}\r\n            >\r\n            {sideList(\"right\")}\r\n            </MobilRightMenuSlider>\r\n        </Toolbar>\r\n    </AppBar>\r\n    </Box>\r\n   </>\r\n    \r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\"\r\nimport {makeStyles} from \"@material-ui/core/styles\"\r\nimport {Typography,Avatar,Grid,Box} from \"@material-ui/core\"\r\nimport Typed from \"react-typed\"\r\nimport avatar from \"../avatar.png\"\r\nconst useStyles=makeStyles(theme=>({\r\n    avatar:{\r\n        width:theme.spacing(15),\r\n        height:theme.spacing(15),\r\n        margin:theme.spacing(1)\r\n    },\r\n    title:{\r\n        color:\"tomato\"\r\n    },\r\n    subtitle:{\r\n        color:\"tan\",\r\n        marginBottom:\"3rem\"\r\n    },\r\n    typedContainer:{\r\n        position:\"absolute\",\r\n        top:\"50%\",\r\n        left:\"50%\",\r\n        transform:\"translate(-50%,-50%)\",\r\n        width:\"100vh\",\r\n        textAlign:\"center\",\r\n        zIndex:1\r\n    }\r\n}))\r\nconst Header=()=>{\r\n    const classes=useStyles()\r\n    return(\r\n<>\r\n<Box className={classes.typedContainer}>\r\n<Grid container justify=\"center\">\r\n    <Avatar className={classes.avatar} src={avatar} alt=\"ujwal\"/>\r\n    </Grid>\r\n    <Typography className={classes.title} variant=\"h4\">\r\n        <Typed strings={[\"Ujwal Kumar\"]} typeSpeed={40}/>\r\n    </Typography>\r\n    <br/>\r\n    <Typography className={classes.subtitle} variant=\"h5\">\r\n        <Typed strings={[\"Student\",\"Chaibasa  Engineering College\",\"CSE\"]} typeSpeed={40}\r\n            backSpeed={60}\r\n            loop\r\n        />\r\n    </Typography>\r\n</Box>\r\n</>\r\n    )}\r\nexport default Header;","import React from 'react';\r\nimport Navbar from \"./Navbar\"\r\nimport Header from \"./Header\"\r\nimport {makeStyles} from \"@material-ui/core/styles\"\r\nimport Particles from \"react-particles-js\"\r\nconst useStyles=makeStyles({\r\n  particleCanva:{\r\n    postion:\"absolute\"\r\n  }\r\n})\r\nfunction Home() {\r\n  const classes=useStyles()\r\n  return (\r\n   <>\r\n   <Navbar/>\r\n   <Header/>\r\n   <Particles\r\n   canvasClassName={classes.particleCanva}\r\n   params={{\r\n     particles:{\r\n       number:{\r\n         value:45,\r\n         density:{\r\n           enable:true,\r\n           value_area:900\r\n         }\r\n       },\r\n       shape:{\r\n         type:\"circle\",\r\n         strole:{\r\n           width:1,\r\n           color:\"tomato\"\r\n         }\r\n       },\r\n       size:{\r\n         value:8,\r\n         random:true,\r\n         anim:{\r\n           enable:true,\r\n           speed:6,\r\n           size_min:0.1,\r\n           sync:true\r\n         }\r\n       },\r\n       opacity:{\r\n         value:1,\r\n         random:true,\r\n         anim:{\r\n           enable:true,\r\n           speed:1,\r\n           opacity_min:0.1,\r\n           sync:false\r\n         }\r\n       }\r\n     }\r\n   }}\r\n   />\r\n   \r\n   </>\r\n    \r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport Home from \"./components/Home\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport './App.css';\n\nfunction App() {\n  return (\n   <>\n   <CssBaseline/>\n   <Home/>\n   </>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/avatar.7c8e5f50.png\";"],"sourceRoot":""}